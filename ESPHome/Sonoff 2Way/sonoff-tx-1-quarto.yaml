substitutions:
  devicename: sonoff-tx-1-quarto
  two_way_ip: 10.10.1.23
  two_way_device_name: sonoff-tx-2-quarto-2
  two_way_device_type: light

esphome:
  name: ${devicename}
  platform: ESP8266
  board: esp01_1m

# Enable logging
logger:

# Enable Home Assistant API
api:


ota:

wifi:
  ssid: "IoT"
  password: !secret wifi_password
  domain: !secret domain

  # Enable fallback hotspot (captive portal) in case wifi connection fails
  ap:
    ssid: ${devicename}
    password: !secret wifi_password

captive_portal:


web_server:
  port: 80
  



http_request:
  useragent: esphome/device
  timeout: 10s
  
  
  
# Text sensors with general information.
text_sensor:
  # Expose ESPHome version as sensor.
  - platform: version
    name: ${devicename} ESPHome Version
  # Expose WiFi information as sensors.
  - platform: wifi_info
    ip_address:
      name: ${devicename} IP
  
  
binary_sensor:
  - platform: gpio
    name: ${devicename} Button 1
    pin:
      number: GPIO0
      mode: INPUT_PULLUP
      inverted: True
    id: button_1
    #on_press:
    #  then:
    #    - light.toggle: light_1
        
        
    # config for multi click actions
    on_multi_click:
      # double click
      - timing:
          - ON for at most 0.8s
          - OFF for at most 0.8s
          - ON for at most 0.8s
          - OFF for at least 0.2s
        then:
          - if:
              condition:
                and:
                  - wifi.connected:
                  - api.connected:
              # send double click event in case wifi and api are conncected
              then:
                - homeassistant.event:
                    event: esphome.button_pressed
                    data:
                      device: ${devicename}
                      action: double click
              # toggle relay in case either wifi or api are not connected
              else:
                - light.toggle: light_1
        # long click
      - timing:
          - ON for at least 1.5s
        then:
          - if:
              condition:
                and:
                  - wifi.connected:
                  - api.connected:
              # send long click event in case wifi and api are conncected
              then:
                - homeassistant.event:
                    event: esphome.button_pressed
                    data:
                      device: ${devicename}
                      action: long click
              # toggle relay in case either wifi or api are not connected
              else:
                - light.toggle: light_1
        # single click
      - timing:
          - ON for at most 0.8s
          - OFF for at least 0.4s
        then:
          - light.toggle: light_1
          

  - platform: status
    name: ${devicename} Status

output:
  - platform: gpio
    pin: GPIO12
    id: relay_1

light:
  - platform: binary
    name: ${devicename}
    id: light_1
    output: relay_1
    on_turn_on:
      - http_request.post:
              url: http://${two_way_ip}/${two_way_device_type}/${two_way_device_name}/turn_on
    on_turn_off:
      - http_request.post:
              url: http://${two_way_ip}/${two_way_device_type}/${two_way_device_name}/turn_off

status_led:
  pin:
    number: GPIO13
    inverted: yes